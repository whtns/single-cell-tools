# library(shinylogs)
library(shinydashboard)
library(ggraph)
# library(seuratTools)
# library(velocyto.R)
library(SingleCellExperiment)
library(iheatmapr)
library(seuratTools, lib.loc = "/dataVolume/storage/rpkgs/devel_install/")
# proj_dir <- fs::path("~/single_cell_projects/sc_cone_devel/sc_cone_devel_organoid/20181001-DS-organoid-Hs_proj/")
proj_dir <- fs::path("~/single_cell_projects/integrated_projects/7_seq_04142020/")
filterTypes <-  c("") %>%
set_names(c("Unfiltered"))
appTitle <- "Dominic"
# define categories manually ------------------------------
# seuratTools::seuratApp(proj_dir, plot_types, filterTypes, appTitle)
# debug(seuratApp)
# debug(plot_velocity_arrows)
# debug(convert_seu_to_cds)
# debug(plot_cds)
# debug(plot_cells)
# debug(subset_cds)
# debug(update_seuratTools_object)
# debug(seurat_integration_pipeline)
debug(integration_workflow)
seuratTools::seuratApp(proj_dir, filterTypes, appTitle, feature_types = c("gene", "transcript"))
# load packages------------------------------
library(tidyverse)
library(shiny)
library(shinydashboard)
# library(seuratTools)
library(seuratTools, lib.loc = "/dataVolume/storage/rpkgs/devel_install/")
library(SingleCellExperiment)
library(iheatmapr)
library(ggraph)
library(formattable)
# project directory------------------------------
proj_dir <- fs::path("~/single_cell_projects/integrated_projects/7-seq_050120/")
# apptitle------------------------------
appTitle <- "reintegration_test"
# call app------------------------------
loom_path <- fs::path(proj_dir, "output", "velocyto", "7-seq_050120.loom")
# debug(get_transcripts_from_seu)
# debug(plot_all_transcripts)
# debug(update_seuratTools_object)
# debug(record_experiment_data)
seuratTools::seuratApp(proj_dir, filterTypes, appTitle, feature_types = c("gene", "transcript"))
# seu_list <- fs::path(proj_dir, "output", "seurat", "noLR_noActD_noDup_nonPR(noOTX+)_noSHL_noOpsinOutlier_2ndVer.rds") %>%
#   readRDS() %>%
#   identity()
# seuratTools::minimalSeuratApp(seu_list, appTitle, feature_types = c("gene", "transcript"), loom_path = loom_path)
# load packages------------------------------
library(tidyverse)
library(shiny)
library(shinydashboard)
# library(seuratTools)
library(seuratTools, lib.loc = "/dataVolume/storage/rpkgs/devel_install/")
library(SingleCellExperiment)
library(iheatmapr)
library(ggraph)
library(formattable)
# project directory------------------------------
proj_dir <- fs::path("~/single_cell_projects/integrated_projects/7-seq_050120/")
# apptitle------------------------------
appTitle <- "reintegration_test"
# call app------------------------------
loom_path <- fs::path(proj_dir, "output", "velocyto", "7-seq_050120.loom")
# debug(get_transcripts_from_seu)
# debug(plot_all_transcripts)
# debug(update_seuratTools_object)
# debug(record_experiment_data)
seuratTools::seuratApp(proj_dir, filterTypes, appTitle, feature_types = c("gene", "transcript"))
# seu_list <- fs::path(proj_dir, "output", "seurat", "noLR_noActD_noDup_nonPR(noOTX+)_noSHL_noOpsinOutlier_2ndVer.rds") %>%
#   readRDS() %>%
#   identity()
# seuratTools::minimalSeuratApp(seu_list, appTitle, feature_types = c("gene", "transcript"), loom_path = loom_path)
# load packages------------------------------
library(tidyverse)
library(shiny)
# library(shinylogs)
library(shinydashboard)
library(ggraph)
# library(seuratTools)
# library(velocyto.R)
library(SingleCellExperiment)
library(iheatmapr)
library(seuratTools, lib.loc = "/dataVolume/storage/rpkgs/devel_install/")
# proj_dir <- fs::path("~/single_cell_projects/sc_cone_devel/sc_cone_devel_organoid/20181001-DS-organoid-Hs_proj/")
proj_dir <- fs::path("~/single_cell_projects/integrated_projects/7_seq_04142020/")
filterTypes <-  c("") %>%
set_names(c("Unfiltered"))
appTitle <- "Dominic"
# define categories manually ------------------------------
# seuratTools::seuratApp(proj_dir, plot_types, filterTypes, appTitle)
# debug(seuratApp)
# debug(plot_velocity_arrows)
# debug(convert_seu_to_cds)
# debug(plot_cds)
# debug(plot_cells)
# debug(subset_cds)
# debug(update_seuratTools_object)
# debug(seurat_integration_pipeline)
debug(integration_workflow)
seuratTools::seuratApp(proj_dir, filterTypes, appTitle, feature_types = c("gene", "transcript"))
# load packages------------------------------
library(tidyverse)
library(shiny)
library(shinylogs)
library(shinydashboard)
library(fs)
library(shinycssloaders)
library(annotables)
library(Seurat)
library(plotly)
library(rprojroot)
library(DT)
library(crosstalk)
# library(seuratTools)
library(seuratTools, lib.loc = "/dataVolume/storage/rpkgs/devel_install/")
proj_dir <- fs::path("~/single_cell_projects/integrated_projects/20210324-updated-human-mouse-clark-merged_proj/")
# define categories manually ------------------------------
# category_vars <- c("seurat", "tissue_type", "read_count", "lane", "fetal_age", "act_d_status", "sort_gate", "batch", "Collection_Method")
#
# names(category_vars) <- c("Louvain Clusters", "Tissue Type", "Low Read Count", "Lane", "Fetal Age", "Actinomycin-D status", "Gate size", "Batch", "Collection Method")
#
# continuous_vars <- c("custom", "nCount_RNA", "S.Score", "G2M.Score")
#
# names(continuous_vars) <- c("Custom Feature", "Read Count", "S score", "G2M score")
#
# plot_types <- list(category_vars = category_vars, continuous_vars = continuous_vars)
filterTypes <-  c("", "remove_lowrc", "remove_lowrc_and_nonPRs", "remove_lowrc_nonPRs_and_actD_treated_cells") %>%
set_names(c("Unfiltered", "w/o low read count cells", "w/o low read count and non photoreceptor cells", "w/o low read count non photoreceptor cells and actD treated cells"))
appTitle <- "Clark, HS+DS human, HS mouse integrated"
# seuratTools::seuratApp(proj_dir, plot_types, filterTypes, appTitle)
seuratTools::seuratApp(proj_dir, filterTypes, appTitle, feature_types = c("gene", "transcript"))
test0 <- readRDS("~/single_cell_projects/integrated_projects/20210324-updated-human-mouse-clark-merged_proj/output/seurat/unfiltered_seu.rds")
test1 <- purrr::imap(test0, update_seuratTools_object)
test1
test1$gene@misc$enriched_pathways
saveRDS(test1, "~/single_cell_projects/integrated_projects/20210324-updated-human-mouse-clark-merged_proj/output/seurat/unfiltered_seu.rds")
saveRDS(test1, "~/single_cell_projects/integrated_projects/20210324-updated-human-mouse-clark-merged_proj/output/seurat/unfiltered_seu.rds")
saveRDS(test1, "~/single_cell_projects/integrated_projects/20210324-updated-human-mouse-clark-merged_proj/output/seurat/unfiltered_seu.rds")
# load packages------------------------------
library(tidyverse)
library(shiny)
library(shinylogs)
library(shinydashboard)
library(fs)
library(shinycssloaders)
library(annotables)
library(Seurat)
library(plotly)
library(rprojroot)
library(DT)
library(crosstalk)
# library(seuratTools)
library(seuratTools, lib.loc = "/dataVolume/storage/rpkgs/devel_install/")
proj_dir <- fs::path("~/single_cell_projects/integrated_projects/20210324-updated-human-mouse-clark-merged_proj/")
# define categories manually ------------------------------
# category_vars <- c("seurat", "tissue_type", "read_count", "lane", "fetal_age", "act_d_status", "sort_gate", "batch", "Collection_Method")
#
# names(category_vars) <- c("Louvain Clusters", "Tissue Type", "Low Read Count", "Lane", "Fetal Age", "Actinomycin-D status", "Gate size", "Batch", "Collection Method")
#
# continuous_vars <- c("custom", "nCount_RNA", "S.Score", "G2M.Score")
#
# names(continuous_vars) <- c("Custom Feature", "Read Count", "S score", "G2M score")
#
# plot_types <- list(category_vars = category_vars, continuous_vars = continuous_vars)
filterTypes <-  c("", "remove_lowrc", "remove_lowrc_and_nonPRs", "remove_lowrc_nonPRs_and_actD_treated_cells") %>%
set_names(c("Unfiltered", "w/o low read count cells", "w/o low read count and non photoreceptor cells", "w/o low read count non photoreceptor cells and actD treated cells"))
appTitle <- "Clark, HS+DS human, HS mouse integrated"
# seuratTools::seuratApp(proj_dir, plot_types, filterTypes, appTitle)
seuratTools::seuratApp(proj_dir, filterTypes, appTitle, feature_types = c("gene", "transcript"))
test1$gene
test1$gene@assays$RNA
test1$gene@assays$integrated
# load packages------------------------------
library(tidyverse)
library(shiny)
library(shinydashboard)
# library(seuratTools)
library(seuratTools, lib.loc = "/dataVolume/storage/rpkgs/devel_install/")
library(SingleCellExperiment)
library(iheatmapr)
library(ggraph)
library(formattable)
# project directory------------------------------
proj_dir <- fs::path("~/single_cell_projects/integrated_projects/20210324-updated-human-mouse-clark-merged_proj/")
# apptitle------------------------------
appTitle <- "reintegration_test"
# call app------------------------------
loom_path <- fs::path(proj_dir, "output", "velocyto", "7-seq_050120.loom")
# seuratTools::seuratApp(proj_dir, filterTypes, appTitle, feature_types = c("gene", "transcript"))
seu_list <- fs::path(proj_dir, "output", "seurat", "unfiltered_seu.rds") %>%
readRDS() %>%
identity()
debug(plot_heatmap)
seuratTools::minimalSeuratApp(seu_list, appTitle, feature_types = c("gene", "transcript"), loom_path = loom_path)
# load packages------------------------------
library(tidyverse)
library(shiny)
library(shinydashboard)
# library(seuratTools)
library(seuratTools, lib.loc = "/dataVolume/storage/rpkgs/devel_install/")
library(SingleCellExperiment)
library(iheatmapr)
library(ggraph)
library(formattable)
# project directory------------------------------
proj_dir <- fs::path("~/single_cell_projects/integrated_projects/20210324-updated-human-mouse-clark-merged_proj/")
# apptitle------------------------------
appTitle <- "reintegration_test"
# call app------------------------------
loom_path <- fs::path(proj_dir, "output", "velocyto", "7-seq_050120.loom")
# seuratTools::seuratApp(proj_dir, filterTypes, appTitle, feature_types = c("gene", "transcript"))
seu_list <- fs::path(proj_dir, "output", "seurat", "unfiltered_seu.rds") %>%
readRDS() %>%
identity()
debug(plot_heatmap)
seuratTools::minimalSeuratApp(seu_list, appTitle, feature_types = c("gene", "transcript"), loom_path = loom_path)
features
VariableFeatures(seu)
rownames(seu)
features %in% rownames(seu)
Q
seuratTools::minimalSeuratApp(seu_list, appTitle, feature_types = c("gene", "transcript"), loom_path = loom_path)
rownames(seu@assays$RNA)
features %in% rownames(seu@assays$RNA)
default_assay
default_assay
seu@assays$RNA@scale.data
seu@assays$RNA@data
)
?DoHeatmap
test1 <- readRDS("~/single_cell_projects/integrated_projects/20210324-updated-human-mouse-clark-merged_proj/output/seurat/unfiltered_seu.rds")
?ScaleData
test1$gene <- ScaleData(test1$gene, aassay = "RNA")
test1$gene@assays$RNA@scale.data
test1$gene <- ScaleData(test1$gene, assay = "RNA")
test1$gene@assays$RNA@scale.data
saveRDS(test1, "~/single_cell_projects/integrated_projects/20210324-updated-human-mouse-clark-merged_proj/output/seurat/unfiltered_seu.rds")
# load packages------------------------------
library(tidyverse)
library(shiny)
library(shinydashboard)
# library(seuratTools)
library(seuratTools, lib.loc = "/dataVolume/storage/rpkgs/devel_install/")
library(SingleCellExperiment)
library(iheatmapr)
library(ggraph)
library(formattable)
# project directory------------------------------
proj_dir <- fs::path("~/single_cell_projects/integrated_projects/20210324-updated-human-mouse-clark-merged_proj/")
# apptitle------------------------------
appTitle <- "reintegration_test"
# call app------------------------------
loom_path <- fs::path(proj_dir, "output", "velocyto", "7-seq_050120.loom")
# seuratTools::seuratApp(proj_dir, filterTypes, appTitle, feature_types = c("gene", "transcript"))
seu_list <- fs::path(proj_dir, "output", "seurat", "unfiltered_seu.rds") %>%
readRDS() %>%
identity()
debug(plot_heatmap)
seuratTools::minimalSeuratApp(seu_list, appTitle, feature_types = c("gene", "transcript"), loom_path = loom_path)
# load packages------------------------------
library(tidyverse)
library(shiny)
library(shinydashboard)
# library(seuratTools)
library(seuratTools, lib.loc = "/dataVolume/storage/rpkgs/devel_install/")
library(SingleCellExperiment)
library(iheatmapr)
library(ggraph)
library(formattable)
# project directory------------------------------
proj_dir <- fs::path("~/single_cell_projects/integrated_projects/20210324-updated-human-mouse-clark-merged_proj/")
# apptitle------------------------------
appTitle <- "reintegration_test"
# call app------------------------------
loom_path <- fs::path(proj_dir, "output", "velocyto", "7-seq_050120.loom")
# seuratTools::seuratApp(proj_dir, filterTypes, appTitle, feature_types = c("gene", "transcript"))
seu_list <- fs::path(proj_dir, "output", "seurat", "unfiltered_seu.rds") %>%
readRDS() %>%
identity()
debug(plot_heatmap)
seuratTools::minimalSeuratApp(seu_list, appTitle, feature_types = c("gene", "transcript"), loom_path = loom_path)
# load packages------------------------------
library(tidyverse)
library(shiny)
library(shinydashboard)
# library(seuratTools)
library(seuratTools, lib.loc = "/dataVolume/storage/rpkgs/devel_install/")
library(SingleCellExperiment)
library(iheatmapr)
library(ggraph)
library(formattable)
# project directory------------------------------
proj_dir <- fs::path("~/single_cell_projects/integrated_projects/20210324-updated-human-mouse-clark-merged_proj/")
# apptitle------------------------------
appTitle <- "reintegration_test"
# call app------------------------------
loom_path <- fs::path(proj_dir, "output", "velocyto", "7-seq_050120.loom")
# seuratTools::seuratApp(proj_dir, filterTypes, appTitle, feature_types = c("gene", "transcript"))
seu_list <- fs::path(proj_dir, "output", "seurat", "unfiltered_seu.rds") %>%
readRDS() %>%
identity()
# debug(plot_heatmap)
seuratTools::minimalSeuratApp(seu_list, appTitle, feature_types = c("gene", "transcript"), loom_path = loom_path)
debug(plot_heatmap)
seuratTools::minimalSeuratApp(seu_list, appTitle, feature_types = c("gene", "transcript"), loom_path = loom_path)
?DoHeatmap
list(...)
seu$Fetal_Age
unique(seu$Fetal_Age)
unique(seu$Fetal_Age)
unique(seu$Fetal_Age)
unique(seu$Fetal_Age)
debug(DoHeatmap)
group.by
group.colors
groups.use
unique(groups.use)
levels(group.use)
group.use
cols
levels(group.use)
cols
cols
Q
plot_heatmap(seu_list$gene, features = c("RXRG", group.by = "Fetal_Age")
)
object
group.by
group.colors
plot_heatmap(seu_list$gene, features = c("RXRG"), group.by = "Fetal_Age")
group.by
object$Fetal_Age
is.na(object$Fetal_Age)
cols
plot
plot$data$Identity
unique(plot$data$Identity)
object$Fetal_Age
object$Fetal_Age %>% unique()
object$Fetal_Age %>% table()
plot$data$Cell
plot$data$Feature
plot$data$Expression
plot$data$Cell
object$batch
table(object$batch)
table(object$fetal_age)
table(object$fetal_week)
table(object$Fetal_Age)
names(object$fetal_age)
names(object$Fetal_Age)
names(object$batch)
names(object$batch) == names(object$Fetal_Age)
all(names(object$batch) == names(object$Fetal_Age))
cols
plot_heatmap(seu_list$gene, features = c("RXRG"), group.by = "Fetal_Age")
groups.use
groups.use %>% table()
group.use
length(group.use)
table(group.use)
names(group.use)
plot
data.group
colnames(data.group)
group.use
plot_heatmap(seu_list$gene, features = c("RXRG"), group.by = "Fetal_Age")
seu$Fetal_Age
seu$Fetal_Age %>% class()
seu$Fetal_Age <- as.factor(seu$Fetal_Age, exclude = NULL)
?factor
seu$Fetal_Age <- factor(seu$Fetal_Age, exclude = NULL)
seu$Fetal_Age
plot
cols
plot
plot$data$Identity
plot_heatmap(seu_list$gene, features = c("RXRG"), group.by = "Fetal_Age")
seu$Fetal_Age
ifelse(is.na(seu$Fetal_Age), "NA", seu$Fetal_Age)
test0 <- ifelse(is.na(seu$Fetal_Age), "NA", seu$Fetal_Age)
table(test0)
plot_heatmap(seu_list$gene, features = c("RXRG"), group.by = "Fetal_Age")
...
list(...)
list(...)
list(...)[1]
list(...)[[1]]
plot_heatmap(seu_list$gene, features = c("RXRG"), group.by = "Fetal_Age")
seu[[list(...)]]
list(...)
test0 <- list(...)
seu[[test0]]
seu[[test0$group.by]]
is.na(seu[[test0$group.by]])
any(is.na(seu[[test0$group.by]]))
# load packages------------------------------
library(tidyverse)
library(shiny)
library(shinydashboard)
# library(seuratTools)
library(seuratTools, lib.loc = "/dataVolume/storage/rpkgs/devel_install/")
library(SingleCellExperiment)
library(iheatmapr)
library(ggraph)
library(formattable)
# project directory------------------------------
proj_dir <- fs::path("~/single_cell_projects/integrated_projects/20210324-updated-human-mouse-clark-merged_proj/")
# apptitle------------------------------
appTitle <- "reintegration_test"
# call app------------------------------
loom_path <- fs::path(proj_dir, "output", "velocyto", "7-seq_050120.loom")
# seuratTools::seuratApp(proj_dir, filterTypes, appTitle, feature_types = c("gene", "transcript"))
seu_list <- fs::path(proj_dir, "output", "seurat", "unfiltered_seu.rds") %>%
readRDS() %>%
identity()
debug(plot_heatmap)
seuratTools::minimalSeuratApp(seu_list, appTitle, feature_types = c("gene", "transcript"), loom_path = loom_path)
group.by
seu$batch
Q
plot_heatmap(seu_list$gene, features = c("RXRG"), group.by = "Fetal_Age")
seu[[group.by]]
# load packages------------------------------
library(tidyverse)
library(shiny)
library(shinydashboard)
# library(seuratTools)
library(seuratTools, lib.loc = "/dataVolume/storage/rpkgs/devel_install/")
library(SingleCellExperiment)
library(iheatmapr)
library(ggraph)
library(formattable)
# project directory------------------------------
proj_dir <- fs::path("~/single_cell_projects/integrated_projects/20210324-updated-human-mouse-clark-merged_proj/")
# apptitle------------------------------
appTitle <- "reintegration_test"
# call app------------------------------
loom_path <- fs::path(proj_dir, "output", "velocyto", "7-seq_050120.loom")
# seuratTools::seuratApp(proj_dir, filterTypes, appTitle, feature_types = c("gene", "transcript"))
seu_list <- fs::path(proj_dir, "output", "seurat", "unfiltered_seu.rds") %>%
readRDS() %>%
identity()
debug(plot_heatmap)
seuratTools::minimalSeuratApp(seu_list, appTitle, feature_types = c("gene", "transcript"), loom_path = loom_path)
seu[[group.by]]
seu[[group.by]] %>% table()
seu[[group.by]]
plot_heatmap(seu_list$gene, features = c("RXRG"), group.by = "Fetal_Age")
group.by
?if_else
seu[[group.by]]
seu[[group.by]][is.na(seu[[group.by]])] <- "NA"
table(seu[[group.by]])
# load packages------------------------------
library(tidyverse)
library(shiny)
library(shinydashboard)
# library(seuratTools)
library(seuratTools, lib.loc = "/dataVolume/storage/rpkgs/devel_install/")
library(SingleCellExperiment)
library(iheatmapr)
library(ggraph)
library(formattable)
# project directory------------------------------
proj_dir <- fs::path("~/single_cell_projects/integrated_projects/20210324-updated-human-mouse-clark-merged_proj/")
# apptitle------------------------------
appTitle <- "reintegration_test"
# call app------------------------------
loom_path <- fs::path(proj_dir, "output", "velocyto", "7-seq_050120.loom")
# seuratTools::seuratApp(proj_dir, filterTypes, appTitle, feature_types = c("gene", "transcript"))
seu_list <- fs::path(proj_dir, "output", "seurat", "unfiltered_seu.rds") %>%
readRDS() %>%
identity()
debug(plot_heatmap)
seuratTools::minimalSeuratApp(seu_list, appTitle, feature_types = c("gene", "transcript"), loom_path = loom_path)
# load packages------------------------------
library(tidyverse)
library(shiny)
library(shinydashboard)
# library(seuratTools)
library(seuratTools, lib.loc = "/dataVolume/storage/rpkgs/devel_install/")
library(SingleCellExperiment)
library(iheatmapr)
library(ggraph)
library(formattable)
# project directory------------------------------
proj_dir <- fs::path("~/single_cell_projects/integrated_projects/20210324-updated-human-mouse-clark-merged_proj/")
# apptitle------------------------------
appTitle <- "reintegration_test"
# call app------------------------------
loom_path <- fs::path(proj_dir, "output", "velocyto", "7-seq_050120.loom")
# seuratTools::seuratApp(proj_dir, filterTypes, appTitle, feature_types = c("gene", "transcript"))
seu_list <- fs::path(proj_dir, "output", "seurat", "unfiltered_seu.rds") %>%
readRDS() %>%
identity()
# debug(plot_heatmap)
seuratTools::minimalSeuratApp(seu_list, appTitle, feature_types = c("gene", "transcript"), loom_path = loom_path)
rstudioapi::terminalActivate()
rstudioapi::terminalActivate()
rstudioapi::terminalActivate()
library(reticulate)
reticulate::source_python('~/python_packages/single_cell_tools/single_cell_tools/sc_pseudotime.py')
reticulate::source_python('~/python_packages/single_cell_tools/single_cell_tools/sc_pseudotime.py')
rstudioapi::terminalActivate()
rstudioapi::terminalActivate()
rstudioapi::terminalActivate()
rstudioapi::terminalActivate()
rstudioapi::terminalActivate()
